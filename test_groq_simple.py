#!/usr/bin/env python3
"""
Test simple para verificar que Groq est√° funcionando
"""
import os
import sys
from pathlib import Path

# Agregar el directorio del proyecto al path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from dotenv import load_dotenv

def test_groq_simple():
    """Test b√°sico de Groq"""
    print("üß™ Test Simple de Groq")
    print("=" * 50)
    
    # Cargar variables de entorno
    load_dotenv()
    
    groq_api_key = os.getenv('GROQ_API_KEY')
    if not groq_api_key:
        print("‚ùå GROQ_API_KEY no encontrada en .env")
        return False
    
    print(f"‚úÖ GROQ_API_KEY encontrada: {groq_api_key[:10]}...")
    
    try:
        from groq import Groq
        print("‚úÖ Groq importado correctamente")
        
        client = Groq(api_key=groq_api_key)
        print("‚úÖ Cliente Groq creado")
        
        # Test simple
        response = client.chat.completions.create(
            messages=[
                {
                    "role": "user",
                    "content": "Di solo 'Hola, funciono correctamente'"
                }
            ],
            model="llama-3.1-8b-instant",
            max_tokens=20
        )
        
        result = response.choices[0].message.content
        print(f"‚úÖ Respuesta de Groq: {result}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Error importando Groq: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Error llamando a Groq: {e}")
        return False

if __name__ == "__main__":
    success = test_groq_simple()
    print("\n" + "=" * 50)
    if success:
        print("üéâ ¬°Test exitoso! Groq est√° funcionando correctamente")
    else:
        print("üí• Test fall√≥. Revisa la configuraci√≥n")
    print("=" * 50)
