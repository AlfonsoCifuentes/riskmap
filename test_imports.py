#!/usr/bin/env python3
"""
Script de prueba para verificar todos los imports de la aplicaci√≥n
"""

import sys
import os
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

print("üîç Verificando imports...")

try:
    from src.orchestration.main_orchestrator import GeopoliticalIntelligenceOrchestrator
    print("‚úÖ GeopoliticalIntelligenceOrchestrator - OK")
except Exception as e:
    print(f"‚ùå GeopoliticalIntelligenceOrchestrator - FAILED: {e}")

try:
    from src.orchestration.task_scheduler import TaskScheduler
    print("‚úÖ TaskScheduler - OK")
except Exception as e:
    print(f"‚ùå TaskScheduler - FAILED: {e}")

try:
    from src.analytics.enhanced_historical_orchestrator import EnhancedHistoricalOrchestrator
    print("‚úÖ EnhancedHistoricalOrchestrator - OK")
except Exception as e:
    print(f"‚ùå EnhancedHistoricalOrchestrator - FAILED: {e}")

try:
    from src.visualization.historical_dashboard import HistoricalDashboard
    print("‚úÖ HistoricalDashboard - OK")
except Exception as e:
    print(f"‚ùå HistoricalDashboard - FAILED: {e}")

try:
    from src.visualization.multivariate_dashboard import MultivariateRelationshipDashboard
    print("‚úÖ MultivariateRelationshipDashboard - OK")
except Exception as e:
    print(f"‚ùå MultivariateRelationshipDashboard - FAILED: {e}")

try:
    from src.api.rest_status import create_api_blueprint
    print("‚úÖ create_api_blueprint - OK")
except Exception as e:
    print(f"‚ùå create_api_blueprint - FAILED: {e}")

try:
    from src.utils.config import logger
    print("‚úÖ logger from config - OK")
except Exception as e:
    print(f"‚ùå logger from config - FAILED: {e}")

print("\nüéØ Resultado: Si todos los imports est√°n OK, el problema est√° en otro lugar.")
