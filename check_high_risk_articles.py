#!/usr/bin/env python3
"""
Script para verificar art√≠culos de alto riesgo disponibles para an√°lisis optimizado
"""

import sqlite3
from datetime import datetime, timedelta

def check_high_risk_articles():
    """Verificar disponibilidad de art√≠culos de alto riesgo"""
    try:
        conn = sqlite3.connect('data/geopolitical_intel.db')
        cursor = conn.cursor()
        
        # Verificar √∫ltimas 72 horas
        cutoff_72h = datetime.now() - timedelta(hours=72)
        cutoff_24h = datetime.now() - timedelta(hours=24)
        
        print("üîç VERIFICACI√ìN DE ART√çCULOS DE ALTO RIESGO")
        print("=" * 50)
        
        # Art√≠culos de alto riesgo √∫ltimas 72h
        cursor.execute("""
            SELECT COUNT(*) as total,
                   COUNT(CASE WHEN risk_level = 'high' THEN 1 END) as high_risk,
                   COUNT(CASE WHEN risk_level = 'very_high' THEN 1 END) as very_high_risk,
                   COUNT(CASE WHEN risk_score >= 0.7 THEN 1 END) as high_score
            FROM articles 
            WHERE published_at >= ? 
            AND (content IS NOT NULL AND LENGTH(content) > 100)
            AND (title IS NOT NULL AND LENGTH(title) > 10)
        """, (cutoff_72h.strftime('%Y-%m-%d %H:%M:%S'),))
        
        stats_72h = cursor.fetchone()
        
        print(f"üìä √öLTIMAS 72 HORAS:")
        print(f"   Total art√≠culos: {stats_72h[0]}")
        print(f"   Alto riesgo (high): {stats_72h[1]}")
        print(f"   Muy alto riesgo (very_high): {stats_72h[2]}")
        print(f"   Score >= 0.7: {stats_72h[3]}")
        
        # Art√≠culos de alto riesgo √∫ltimas 24h
        cursor.execute("""
            SELECT COUNT(*) as total,
                   COUNT(CASE WHEN risk_level = 'high' THEN 1 END) as high_risk,
                   COUNT(CASE WHEN risk_level = 'very_high' THEN 1 END) as very_high_risk,
                   COUNT(CASE WHEN risk_score >= 0.7 THEN 1 END) as high_score
            FROM articles 
            WHERE published_at >= ? 
            AND (content IS NOT NULL AND LENGTH(content) > 100)
            AND (title IS NOT NULL AND LENGTH(title) > 10)
        """, (cutoff_24h.strftime('%Y-%m-%d %H:%M:%S'),))
        
        stats_24h = cursor.fetchone()
        
        print(f"\nüìä √öLTIMAS 24 HORAS:")
        print(f"   Total art√≠culos: {stats_24h[0]}")
        print(f"   Alto riesgo (high): {stats_24h[1]}")
        print(f"   Muy alto riesgo (very_high): {stats_24h[2]}")
        print(f"   Score >= 0.7: {stats_24h[3]}")
        
        # Obtener ejemplos de art√≠culos de alto riesgo
        cursor.execute("""
            SELECT id, title, risk_level, risk_score, published_at, country
            FROM articles 
            WHERE published_at >= ? 
            AND (risk_level = 'high' OR risk_level = 'very_high' OR risk_score >= 0.7)
            AND (content IS NOT NULL AND LENGTH(content) > 100)
            ORDER BY published_at DESC
            LIMIT 5
        """, (cutoff_72h.strftime('%Y-%m-%d %H:%M:%S'),))
        
        examples = cursor.fetchall()
        
        if examples:
            print(f"\nüì∞ EJEMPLOS DE ART√çCULOS DE ALTO RIESGO:")
            for i, (id, title, risk_level, risk_score, published_at, country) in enumerate(examples, 1):
                print(f"   {i}. [{id}] {title[:60]}...")
                print(f"      Riesgo: {risk_level} | Score: {risk_score:.2f} | Pa√≠s: {country}")
                print(f"      Fecha: {published_at}")
                print()
        else:
            print("\n‚ö†Ô∏è NO SE ENCONTRARON ART√çCULOS DE ALTO RIESGO RECIENTES")
            print("üí° Esto significa que el an√°lisis optimizado podr√≠a no encontrar conflictos")
            
            # Buscar art√≠culos de riesgo medio como alternativa
            cursor.execute("""
                SELECT COUNT(*) as total
                FROM articles 
                WHERE published_at >= ? 
                AND (risk_level = 'medium' OR risk_score >= 0.4)
                AND (content IS NOT NULL AND LENGTH(content) > 100)
            """, (cutoff_72h.strftime('%Y-%m-%d %H:%M:%S'),))
            
            medium_count = cursor.fetchone()[0]
            print(f"üìä Art√≠culos de riesgo medio disponibles: {medium_count}")
        
        # Verificar distribuci√≥n general de riesgo
        cursor.execute("""
            SELECT risk_level, COUNT(*) as count
            FROM articles 
            WHERE published_at >= ?
            GROUP BY risk_level
            ORDER BY count DESC
        """, (cutoff_72h.strftime('%Y-%m-%d %H:%M:%S'),))
        
        risk_distribution = cursor.fetchall()
        
        print(f"\nüìà DISTRIBUCI√ìN DE RIESGO (72h):")
        for risk_level, count in risk_distribution:
            print(f"   {risk_level}: {count} art√≠culos")
        
        conn.close()
        
        # Recomendaciones
        print(f"\nüí° RECOMENDACIONES:")
        total_high_risk = stats_72h[1] + stats_72h[2] + stats_72h[3]
        if total_high_risk >= 5:
            print("‚úÖ Suficientes art√≠culos de alto riesgo para an√°lisis optimizado")
        elif total_high_risk >= 1:
            print("‚ö†Ô∏è Pocos art√≠culos de alto riesgo. El an√°lisis ser√° r√°pido pero con pocos resultados")
        else:
            print("‚ùå Sin art√≠culos de alto riesgo. El an√°lisis usar√° art√≠culos de riesgo medio")
            print("üîß Considera ejecutar el analizador BERT para re-evaluar riesgos")
        
    except Exception as e:
        print(f"‚ùå Error verificando art√≠culos: {e}")

if __name__ == "__main__":
    check_high_risk_articles()
