"""
Flask Dashboard with REAL BERT Integration + Groq AI Analysis - UNIFIED VERSION
Implementaci√≥n corregida que garantiza el uso del modelo BERT de HuggingFace
+ An√°lisis geopol√≠tico avanzado con Groq
"""

from flask import Flask, render_template, jsonify, request
from flask_cors import CORS
from datetime import datetime
import os
import logging
import json
from dotenv import load_dotenv

# Cargar variables de entorno desde .env
load_dotenv()

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__, 
    template_folder='src/dashboard/templates',
    static_folder='src/dashboard/static')
CORS(app)

# Variables globales para el modelo BERT
bert_model = None
bert_tokenizer = None
sentiment_pipeline = None

def initialize_bert_model():
    """
    Inicializa el modelo BERT espec√≠fico para an√°lisis pol√≠tico
    FIXED: Mejor manejo de errores y descarga del modelo
    """
    global bert_model, bert_tokenizer, sentiment_pipeline
    
    try:
        logger.info("üß† Iniciando carga del modelo BERT pol√≠tico...")
        
        from transformers import AutoTokenizer, AutoModelForSequenceClassification, pipeline
        import torch
        
        # Modelo espec√≠fico para an√°lisis de sentimiento pol√≠tico
        model_name = "cardiffnlp/twitter-roberta-base-sentiment-latest"  # Modelo m√°s estable
        
        logger.info(f"üì• Descargando modelo: {model_name}")
        
        # Cargar tokenizer y modelo con mejor manejo de errores
        try:
            bert_tokenizer = AutoTokenizer.from_pretrained(
                model_name,
                use_fast=True,
                trust_remote_code=False
            )
            logger.info("‚úÖ Tokenizer cargado exitosamente")
            
            bert_model = AutoModelForSequenceClassification.from_pretrained(
                model_name,
                trust_remote_code=False
            )
            logger.info("‚úÖ Modelo cargado exitosamente")
            
        except Exception as download_error:
            logger.error(f"‚ùå Error descargando modelo: {download_error}")
            # Intentar con un modelo local m√°s simple
            try:
                logger.info("üîÑ Intentando con modelo alternativo...")
                model_name = "distilbert-base-uncased-finetuned-sst-2-english"
                
                bert_tokenizer = AutoTokenizer.from_pretrained(model_name)
                bert_model = AutoModelForSequenceClassification.from_pretrained(model_name)
                logger.info(f"‚úÖ Modelo alternativo cargado: {model_name}")
                
            except Exception as alt_error:
                logger.error(f"‚ùå Error con modelo alternativo: {alt_error}")
                return False
        
        # Crear pipeline de an√°lisis
        sentiment_pipeline = pipeline(
            "sentiment-analysis",
            model=bert_model,
            tokenizer=bert_tokenizer,
            top_k=None,  # Reemplaza return_all_scores=True
            device=-1  # Forzar CPU para compatibilidad
        )
        
        logger.info("‚úÖ Pipeline BERT creado exitosamente")
        logger.info("üîß Dispositivo: CPU (para compatibilidad)")
        
        # Test del modelo
        test_text = "This is a test of political sentiment analysis"
        test_result = sentiment_pipeline(test_text)
        logger.info(f"üß™ Test del modelo exitoso: {len(test_result)} resultados")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå FALLO CR√çTICO: No se pudo cargar el modelo BERT: {e}")
        logger.error(f"‚ùå Tipo de error: {type(e).__name__}")
        return False

def analyze_with_bert(text):
    """
    Analiza texto usando el modelo BERT real
    FIXED: Mejor manejo de errores y validaci√≥n
    """
    global sentiment_pipeline
    
    if sentiment_pipeline is None:
        raise RuntimeError("Modelo BERT no est√° disponible")
    
    try:
        # Limpiar y preparar texto
        cleaned_text = str(text).strip()
        if not cleaned_text:
            raise ValueError("Texto vac√≠o para an√°lisis")
            
        # Limitar longitud para BERT
        if len(cleaned_text) > 512:
            cleaned_text = cleaned_text[:512]
        
        # An√°lisis con BERT
        results = sentiment_pipeline(cleaned_text)
        
        if not results or len(results) == 0:
            raise ValueError("No se obtuvieron resultados del modelo")
        
        # Extraer scores de manera m√°s robusta
        sentiment_scores = {}
        for result in results:
            if isinstance(result, dict) and 'label' in result and 'score' in result:
                label = result['label'].upper()
                sentiment_scores[label] = result['score']
        
        # Manejar diferentes formatos de labels
        negative_score = sentiment_scores.get('NEGATIVE', 
                        sentiment_scores.get('NEG', 
                        sentiment_scores.get('LABEL_0', 0)))
        positive_score = sentiment_scores.get('POSITIVE', 
                        sentiment_scores.get('POS', 
                        sentiment_scores.get('LABEL_1', 0)))
        
        # Si no hay scores, usar neutral
        if negative_score == 0 and positive_score == 0:
            negative_score = 0.5
            positive_score = 0.5
        
        # Calcular importancia basada en sentimiento
        # En noticias pol√≠ticas, sentimiento negativo indica mayor importancia
        importance = (negative_score * 80) + (positive_score * 20)
        
        # Escalar a 10-100
        importance = max(10, min(100, importance * 100))
        
        return {
            'importance': importance,
            'negative_sentiment': negative_score,
            'positive_sentiment': positive_score,
            'confidence': max(negative_score, positive_score),
            'raw_results': results
        }
        
    except Exception as e:
        logger.error(f"‚ùå Error en an√°lisis BERT: {e}")
        raise

@app.route('/')
def index():
    """Main dashboard route."""
    return render_template('modern_dashboard_updated.html')

@app.route('/api/dashboard/stats')
def get_dashboard_stats():
    """Get dashboard statistics."""
    return jsonify({
        'total_articles': 150,
        'today_articles': 25,
        'high_risk_alerts': 8,
        'countries_monitored': 45,
        'last_update': datetime.now().isoformat()
    })

@app.route('/api/articles')
def get_articles():
    """Get articles with pagination."""
    # Mock data for testing - with real news structure including images
    mock_articles = [
        {
            'id': 1,
            'title': 'Escalada militar en conflicto internacional',
            'content': 'Las tensiones militares han aumentado significativamente en la regi√≥n con movilizaci√≥n de tropas',
            'location': 'Europa Oriental',
            'risk_level': 'high',
            'risk_score': 0.8,
            'created_at': datetime.now().isoformat(),
            'country': 'Ukraine',
            'image_url': None,  # Real articles should have actual image URLs
            'source': 'Reuters',
            'url': 'https://example.com/news1'
        },
        {
            'id': 2,
            'title': 'Cumbre econ√≥mica internacional concluye exitosamente',
            'content': 'Los l√≠deres mundiales alcanzan acuerdos comerciales importantes para la estabilidad econ√≥mica',
            'location': 'Geneva',
            'risk_level': 'low',
            'risk_score': 0.3,
            'created_at': datetime.now().isoformat(),
            'country': 'Switzerland',
            'image_url': None,  # Real articles should have actual image URLs
            'source': 'AP News',
            'url': 'https://example.com/news2'
        },
        {
            'id': 3,
            'title': 'Amenaza nuclear en Asia Pacific aumenta tensiones',
            'content': 'Expertos en seguridad expresan preocupaci√≥n por el desarrollo de armas nucleares en la regi√≥n',
            'location': 'Asia Pacific',
            'risk_level': 'critical',
            'risk_score': 0.95,
            'created_at': datetime.now().isoformat(),
            'country': 'Multiple',
            'image_url': None,  # Real articles should have actual image URLs
            'source': 'BBC News',
            'url': 'https://example.com/news3'
        },
        {
            'id': 4,
            'title': 'Ataque terrorista en capital europea deja m√∫ltiples v√≠ctimas',
            'content': 'Un ataque coordinado ha impactado el centro de una importante ciudad europea',
            'location': 'Paris',
            'risk_level': 'critical',
            'risk_score': 0.9,
            'created_at': datetime.now().isoformat(),
            'country': 'France',
            'image_url': None,  # Real articles should have actual image URLs
            'source': 'France24',
            'url': 'https://example.com/news4'
        }
    ] * 5  # Repeat to have more articles
    
    return jsonify({
        'articles': mock_articles,
        'page': 1,
        'total': len(mock_articles)
    })

def generate_groq_geopolitical_analysis(articles):
    """
    Genera un an√°lisis geopol√≠tico usando Groq API
    """
    try:
        from groq import Groq
        
        groq_api_key = os.getenv('GROQ_API_KEY')
        if not groq_api_key:
            logger.warning("GROQ_API_KEY no encontrada. Usando an√°lisis de respaldo.")
            return generate_fallback_analysis(articles)
        
        client = Groq(api_key=groq_api_key)
        
        articles_context = "\n\n".join([
            f"ART√çCULO {i+1}:\nT√≠tulo: {article.get('title', 'N/A')}\nContenido: {article.get('content', 'N/A')[:500]}...\nUbicaci√≥n: {article.get('location', 'N/A')}"
            for i, article in enumerate(articles[:20])
        ])
        
        prompt = f"""
        Eres un periodista experto en geopol√≠tica con 25 a√±os de experiencia, escribiendo para un peri√≥dico de renombre mundial. Tu estilo es incisivo, humano y riguroso. No temes nombrar l√≠deres, pa√≠ses o conflictos, y ofreces predicciones fundamentadas pero humildes.

        Analiza los siguientes {len(articles)} art√≠culos de noticias y genera un an√°lisis geopol√≠tico en formato HTML.

        ART√çCULOS DE CONTEXTO:
        {articles_context}

        INSTRUCCIONES CLAVE:
        1.  **Estilo Period√≠stico Humano**: Escribe con una voz personal y experta, no como una IA. Usa un lenguaje rico y evocador.
        2.  **Nombres Propios**: Menciona l√≠deres (Putin, Xi Jinping, Biden, Zelensky), pa√≠ses y regiones relevantes.
        3.  **An√°lisis Profundo**: Conecta los puntos entre diferentes conflictos y tendencias. No te limites a resumir.
        4.  **Opini√≥n Fundamentada**: Expresa tu opini√≥n y proyecciones, pero siempre desde la humildad y el rigor anal√≠tico.
        5.  **Formato HTML Espec√≠fico**:
            *   El `content` debe ser una cadena de texto HTML.
            *   Usa p√°rrafos `<p>` para el cuerpo del texto.
            *   **No uses** `<h1>`, `<h2>`, etc., dentro del `content`. El t√≠tulo y subt√≠tulo van en sus propios campos.
            *   Puedes usar `<strong>` para enfatizar conceptos clave.

        RESPONDE √öNICAMENTE CON UN OBJETO JSON V√ÅLIDO con la siguiente estructura:
        {{
          "title": "Un titular principal, impactante y profesional",
          "subtitle": "Un subt√≠tulo que resuma la esencia del an√°lisis",
          "content": "El cuerpo completo del art√≠culo en HTML, usando solo <p> y <strong>.",
          "sources_count": {len(articles)}
        }}
        """

        logger.info("ü§ñ Generando an√°lisis con Groq AI...")
        chat_completion = client.chat.completions.create(
            messages=[
                {
                    "role": "system",
                    "content": "Eres un analista geopol√≠tico de √©lite. Tu √∫nica salida es un objeto JSON v√°lido que sigue estrictamente la estructura solicitada."
                },
                {
                    "role": "user",
                    "content": prompt
                }
            ],
            model="llama-3.1-8b-instant",
            temperature=0.75,
            max_tokens=3000,
            response_format={"type": "json_object"}
        )
        
        response_content = chat_completion.choices[0].message.content
        logger.info("‚úÖ An√°lisis Groq generado exitosamente.")
        
        try:
            analysis_data = json.loads(response_content)
            # Validar campos requeridos
            if 'title' in analysis_data and 'subtitle' in analysis_data and 'content' in analysis_data:
                return analysis_data
            else:
                logger.error("JSON de Groq incompleto. Faltan campos requeridos.")
                return generate_fallback_analysis(articles)
        except json.JSONDecodeError:
            logger.error(f"Error al decodificar JSON de Groq. Contenido: {response_content[:500]}...")
            return generate_fallback_analysis(articles)
            
    except ImportError:
        logger.error("Librer√≠a Groq no instalada. Ejecuta: pip install groq")
        return generate_fallback_analysis(articles)
    except Exception as e:
        logger.error(f"Error en la llamada a la API de Groq: {e}")
        return generate_fallback_analysis(articles)

def generate_fallback_analysis(articles):
    """
    Genera an√°lisis de respaldo cuando Groq no est√° disponible
    """
    current_date = datetime.now().strftime("%d de %B de %Y")
    
    return {
        "title": "El Tablero Geopol√≠tico se Reconfigura en Tiempo Real",
        "subtitle": "Tensiones globales y nuevas alianzas redefinen el orden mundial mientras la incertidumbre marca el rumbo internacional",
        "content": f"""
            <p>El panorama geopol√≠tico mundial atraviesa uno de sus momentos m√°s complejos de las √∫ltimas d√©cadas. Las tensiones que se extienden desde Europa Oriental hasta el Pac√≠fico est√°n redibujando las alianzas internacionales y poniendo a prueba el orden establecido tras la Guerra Fr√≠a.</p>
            
            <p>En Europa, el conflicto en Ucrania ha consolidado la posici√≥n de la OTAN como un actor determinante en la seguridad continental. La respuesta occidental, liderada por Estados Unidos y respaldada firmemente por Reino Unido y Polonia, ha demostrado una cohesi√≥n que pocos predec√≠an. Sin embargo, las fisuras emergen cuando se analiza la dependencia energ√©tica europea, particularmente de Alemania, que se ve obligada a reconsiderar d√©cadas de pol√≠tica energ√©tica.</p>

            <p>El presidente <strong>Volodymyr Zelensky</strong> ha logrado mantener el apoyo internacional, aunque las elecciones en Estados Unidos podr√≠an alterar significativamente este respaldo. La fatiga b√©lica en algunos sectores de la opini√≥n p√∫blica occidental es palpable, y l√≠deres como <strong>Viktor Orb√°n</strong> en Hungr√≠a han sido voces discordantes dentro de la alianza europea.</p>

            <p>En el frente asi√°tico, las tensiones en el estrecho de Taiw√°n han escalado a niveles que recuerdan los momentos m√°s √°lgidos de la Guerra Fr√≠a. <strong>Xi Jinping</strong> ha intensificado la ret√≥rica sobre la reunificaci√≥n, mientras que la administraci√≥n estadounidense, junto con Jap√≥n y Australia, han reforzado su presencia militar en la regi√≥n. Corea del Norte, bajo <strong>Kim Jong-un</strong>, ha aprovechado estas tensiones para acelerar su programa nuclear.</p>

            <p>La crisis energ√©tica global ha puesto de manifiesto la vulnerabilidad de las cadenas de suministro internacionales. Los pa√≠ses del Golfo, liderados por Arabia Saud√≠ y Emiratos √Årabes Unidos, han recuperado protagonismo geopol√≠tico, navegando h√°bilmente entre las presiones occidentales y sus relaciones con Rusia y China. <strong>Mohammed bin Salman</strong> ha demostrado una diplomacia pragm√°tica que desaf√≠a las expectativas tradicionales.</p>

            <p>En Am√©rica Latina, el escenario es igualmente complejo. Brasil, bajo <strong>Luiz In√°cio Lula da Silva</strong>, busca posicionarse como mediador en los conflictos globales, mientras que pa√≠ses como Colombia y Chile redefinen sus alianzas regionales. La influencia china en la regi√≥n crece silenciosamente, ofreciendo alternativas de inversi√≥n que compiten directamente con los tradicionales socios occidentales.</p>

            <p>√Åfrica emerge como el continente donde se libra una nueva guerra fr√≠a silenciosa. Rusia, a trav√©s de grupos mercenarios, y China, mediante su iniciativa de la Franja y la Ruta, compiten por la influencia en un continente que alberga recursos cruciales para la transici√≥n energ√©tica mundial. Francia ve erosionada su influencia tradicional en el Sahel, mientras que nuevos actores como Turqu√≠a e India buscan su espacio.</p>

            <p>El multilateralismo atraviesa una crisis profunda. Las Naciones Unidas muestran signos evidentes de obsolescencia institucional, con un Consejo de Seguridad paralizado por los vetos cruzados entre las potencias. Organizaciones como el G7 y el G20 luchan por mantener relevancia en un mundo cada vez m√°s fragmentado en bloques regionales.</p>

            <p>La tecnolog√≠a se ha convertido en el nuevo campo de batalla geopol√≠tico. La competencia entre Estados Unidos y China por el dominio de la inteligencia artificial, los semiconductores y las tecnolog√≠as 5G est√° redefiniendo las cadenas de valor globales. Europa intenta mantener su autonom√≠a estrat√©gica, pero se encuentra atrapada entre las dos superpotencias tecnol√≥gicas.</p>

            <p>Mirando hacia el futuro, tres escenarios parecen posibles: una bipolarizaci√≥n renovada entre bloques liderados por Washington y Beijing, una multipolaridad ca√≥tica donde las potencias medias ganen protagonismo, o una fragmentaci√≥n regional que privilegie las alianzas geogr√°ficas sobre las ideol√≥gicas. La pr√≥xima d√©cada ser√° crucial para determinar cu√°l de estas tendencias prevalece.</p>

            <p>Como observadores de este complejo tablero, debemos resistir la tentaci√≥n de las predicciones categ√≥ricas. La historia nos ense√±a que los momentos de mayor incertidumbre son tambi√©n los de mayor oportunidad para el cambio. Lo que s√≠ parece claro es que el orden mundial tal como lo conocemos est√° siendo desafiado desde m√∫ltiples frentes, y las decisiones que tomen los l√≠deres mundiales en los pr√≥ximos meses definir√°n el rumbo de las pr√≥ximas d√©cadas.</p>
        """,
        "sources_count": len(articles),
        "analysis_date": datetime.now().isoformat()
    }

@app.route('/api/generate-ai-analysis', methods=['POST'])
def generate_ai_analysis():
    """
    Endpoint para generar an√°lisis geopol√≠tico con Groq
    """
    try:
        data = request.get_json()
        
        if not data or 'articles' not in data:
            return jsonify({
                'error': 'No articles provided for analysis'
            }), 400
        
        articles = data['articles']
        analysis_type = data.get('analysis_type', 'geopolitical_journalistic')
        
        logger.info(f"üß† Generando an√°lisis {analysis_type} con {len(articles)} art√≠culos")
        
        # Generar an√°lisis con Groq
        analysis_result = generate_groq_geopolitical_analysis(articles)
        
        return jsonify(analysis_result)
        
    except Exception as e:
        logger.error(f"‚ùå Error en generate_ai_analysis: {e}")
        return jsonify({
            'error': f'Error generating analysis: {str(e)}'
        }), 500

@app.route('/api/test-bert')
def test_bert_route():
    """Test route to verify BERT model is loaded"""
    global sentiment_pipeline
    
    if sentiment_pipeline is None:
        return jsonify({
            'status': 'ERROR',
            'message': 'Modelo BERT no est√° cargado',
            'bert_loaded': False
        }), 500
    
    try:
        # Test real del modelo
        test_text = "Military conflict escalates with nuclear threats"
        result = analyze_with_bert(test_text)
        
        return jsonify({
            'status': 'OK',
            'message': 'Modelo BERT funcionando correctamente',
            'bert_loaded': True,
            'test_analysis': result
        })
    except Exception as e:
        return jsonify({
            'status': 'ERROR',
            'message': f'Error en modelo BERT: {str(e)}',
            'bert_loaded': False
        }), 500

@app.route('/api/analyze-importance', methods=['POST'])
def analyze_importance_bert():
    """
    AN√ÅLISIS BERT REAL - VERSI√ìN CORREGIDA
    Este endpoint garantiza que se use el modelo de IA real
    """
    global sentiment_pipeline
    
    try:
        article_data = request.get_json()
        
        if not article_data:
            return jsonify({
                'error': 'No article data provided'
            }), 400
        
        # Validar que BERT est√© disponible
        if sentiment_pipeline is None:
            logger.error("‚ùå CR√çTICO: Modelo BERT no disponible")
            return jsonify({
                'error': 'Modelo BERT no est√° disponible - an√°lisis imposible',
                'bert_required': True,
                'fallback_used': False
            }), 503  # Service Unavailable
        
        # Preparar texto para an√°lisis
        title = article_data.get('title', '')
        content = article_data.get('content', '')
        analysis_text = f"{title}. {content}"
        
        if not analysis_text.strip():
            return jsonify({
                'error': 'No hay texto para analizar'
            }), 400
        
        logger.info(f"üß† Analizando con BERT: {title[:50]}...")
        
        # AN√ÅLISIS BERT REAL
        bert_result = analyze_with_bert(analysis_text)
        
        # Factor de riesgo geopol√≠tico adicional
        location = article_data.get('location', '').lower()
        risk_level = article_data.get('risk_level', 'medium').lower()
        
        # Multiplicador geopol√≠tico
        geo_multiplier = 1.0
        high_risk_regions = ['ukraine', 'gaza', 'israel', 'syria', 'afghanistan', 'iran', 'iraq']
        for region in high_risk_regions:
            if region in location:
                geo_multiplier = 1.3
                break
        
        # Multiplicador por nivel de riesgo
        risk_multipliers = {'critical': 1.4, 'high': 1.2, 'medium': 1.0, 'low': 0.8}
        risk_multiplier = risk_multipliers.get(risk_level, 1.0)
        
        # Importancia final combinada
        final_importance = bert_result['importance'] * geo_multiplier * risk_multiplier
        final_importance = max(10, min(100, final_importance))
        
        # Resultado con an√°lisis BERT real
        result = {
            'importance_factor': round(final_importance, 2),
            'risk_factor': round(final_importance, 2),
            'bert_analysis': {
                'negative_sentiment': round(bert_result['negative_sentiment'], 4),
                'positive_sentiment': round(bert_result['positive_sentiment'], 4),
                'confidence': round(bert_result['confidence'], 4),
                'model_used': 'BERT Sentiment Analysis (Fixed Version)'
            },
            'geopolitical_factors': {
                'location': location,
                'geo_multiplier': geo_multiplier,
                'risk_level': risk_level,
                'risk_multiplier': risk_multiplier
            },
            'article_metadata': {
                'title': title[:100],
                'location': article_data.get('location', ''),
                'risk_level': risk_level,
                'analysis_timestamp': datetime.now().isoformat()
            },
            'model_info': {
                'primary_model': 'BERT Sentiment Analysis',
                'analysis_type': 'real_bert_political_sentiment',
                'fallback_used': False,
                'ai_powered': True
            }
        }
        
        logger.info(f"‚úÖ BERT an√°lisis completado: {final_importance:.1f}%")
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"‚ùå Error cr√≠tico en an√°lisis BERT: {e}")
        return jsonify({
            'error': f'Error en an√°lisis BERT: {str(e)}',
            'bert_required': True,
            'fallback_used': False
        }), 500

# =====================================================
# GROQ AI ANALYSIS ENDPOINTS
# =====================================================

def get_top_articles_from_db(limit=20):
    """
    Obtiene los art√≠culos m√°s importantes de la base de datos
    """
    try:
        # Por ahora usar datos mock - en producci√≥n conectar a la BD
        mock_articles = [
            {
                'id': 1,
                'title': 'Escalada militar en conflicto internacional',
                'content': 'Las tensiones militares han aumentado significativamente en la regi√≥n con movilizaci√≥n de tropas y declaraciones oficiales que indican una posible escalada del conflicto.',
                'location': 'Europa Oriental',
                'risk_score': 0.8,
                'source': 'Reuters',
                'created_at': datetime.now().isoformat()
            },
            {
                'id': 2,
                'title': 'Crisis diplom√°tica entre potencias mundiales',
                'content': 'Las relaciones bilaterales se han deteriorado tras las √∫ltimas declaraciones oficiales, generando incertidumbre en los mercados internacionales.',
                'location': 'Asia-Pac√≠fico',
                'risk_score': 0.7,
                'source': 'BBC',
                'created_at': datetime.now().isoformat()
            },
            {
                'id': 3,
                'title': 'Movimientos econ√≥micos estrat√©gicos',
                'content': 'Los √∫ltimos movimientos en el sector energ√©tico indican cambios importantes en las alianzas comerciales globales.',
                'location': 'Medio Oriente',
                'risk_score': 0.6,
                'source': 'CNN',
                'created_at': datetime.now().isoformat()
            }
        ]
        
        # Simular m√°s art√≠culos para an√°lisis robusto
        for i in range(4, limit + 1):
            mock_articles.append({
                'id': i,
                'title': f'Desarrollo geopol√≠tico importante #{i}',
                'content': f'An√°lisis de eventos significativos en diferentes regiones que impactan la estabilidad global y regional. Evento {i} con implicaciones importantes.',
                'location': f'Regi√≥n {i % 6 + 1}',
                'risk_score': 0.5 + (i % 5) * 0.1,
                'source': f'Fuente {i}',
                'created_at': datetime.now().isoformat()
            })
        
        return mock_articles[:limit]
        
    except Exception as e:
        logger.error(f"Error obteniendo art√≠culos: {e}")
        return []

def generate_groq_geopolitical_analysis(articles):
    """
    Genera an√°lisis geopol√≠tico usando Groq AI
    """
    try:
        from groq import Groq
        
        # Inicializar cliente Groq
        groq_api_key = os.getenv('GROQ_API_KEY')
        if not groq_api_key:
            raise ValueError("GROQ_API_KEY no encontrada en variables de entorno")
        
        client = Groq(api_key=groq_api_key)
        
        # Preparar contexto de art√≠culos
        articles_context = ""
        for i, article in enumerate(articles[:20], 1):
            articles_context += f"""
            Art√≠culo {i}:
            T√≠tulo: {article.get('title', 'Sin t√≠tulo')}
            Ubicaci√≥n: {article.get('location', 'Sin ubicaci√≥n')}
            Contenido: {article.get('content', 'Sin contenido')[:300]}
            Nivel de Riesgo: {article.get('risk_score', 0)}
            Fuente: {article.get('source', 'Sin fuente')}
            ---
            """
        
        # Prompt especializado para an√°lisis geopol√≠tico
        prompt = f"""
        Como analista geopol√≠tico senior, analiza los siguientes {len(articles)} art√≠culos de noticias y genera un an√°lisis integral en estilo period√≠stico profesional.

        CONTEXTO DE ART√çCULOS:
        {articles_context}

        INSTRUCCIONES ESPEC√çFICAS:
        1. Escribe en espa√±ol con estilo period√≠stico profesional
        2. Estructura el an√°lisis en p√°rrafos bien definidos
        3. Identifica patrones y conexiones entre eventos
        4. Eval√∫a implicaciones geopol√≠ticas a corto y mediano plazo
        5. Menciona regiones y actores clave
        6. Usa un tono objetivo pero accesible
        7. Longitud: aproximadamente 800-1200 palabras

        ESTRUCTURA REQUERIDA:
        - T√≠tulo llamativo y profesional
        - Subt√≠tulo que capture la esencia del an√°lisis
        - Introducci√≥n que establezca el contexto global actual
        - Desarrollo de los principales temas identificados
        - An√°lisis de implicaciones y tendencias
        - Conclusi√≥n que sintetice los puntos clave

        Genera el an√°lisis ahora:
        """
        
        # Llamada a Groq
        logger.info("ü§ñ Generando an√°lisis con Groq AI...")
        response = client.chat.completions.create(
            model="llama-3.1-8b-instant",  # Modelo actualizado
            messages=[
                {"role": "system", "content": "Eres un analista geopol√≠tico experto que escribe an√°lisis profesionales en espa√±ol."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=2000,
            temperature=0.7
        )
        
        analysis_content = response.choices[0].message.content
        logger.info("‚úÖ An√°lisis Groq generado exitosamente")
        
        return {
            'title': 'El Tablero Geopol√≠tico se Reconfigura en Tiempo Real',
            'subtitle': 'An√°lisis integral de los desarrollos m√°s significativos que est√°n redefiniendo el equilibrio mundial',
            'content': analysis_content,
            'sources_count': len(articles),
            'generated_at': datetime.now().isoformat(),
            'ai_model': 'Groq Llama-3.1-8b-instant',
            'analysis_type': 'geopolitical_journalistic'
        }
        
    except Exception as e:
        logger.error(f"Error en an√°lisis Groq: {e}")
        return generate_fallback_analysis(articles)

def generate_fallback_analysis(articles):
    """
    Genera an√°lisis de respaldo si Groq no est√° disponible
    """
    return {
        'title': 'Panorama Geopol√≠tico Global: An√°lisis de Desarrollos Recientes',
        'subtitle': 'Evaluaci√≥n integral de los eventos m√°s significativos en el escenario internacional',
        'content': f"""
        <p>El escenario geopol√≠tico mundial presenta actualmente una compleja red de interacciones que requieren an√°lisis detallado. Bas√°ndose en {len(articles)} fuentes informativas recientes, emergen varios patrones significativos.</p>
        
        <p>Las tensiones internacionales contin√∫an manifest√°ndose en m√∫ltiples frentes, desde Europa Oriental hasta el Asia-Pac√≠fico, creando un ambiente de incertidumbre que afecta tanto las relaciones diplom√°ticas como los mercados globales.</p>
        
        <p>Los desarrollos econ√≥micos y militares observados sugieren una reconfiguraci√≥n de las alianzas tradicionales, con implicaciones que se extienden m√°s all√° de las fronteras regionales hacia el equilibrio de poder global.</p>
        
        <p>La informaci√≥n analizada indica que los pr√≥ximos meses ser√°n cruciales para determinar la direcci√≥n de varios conflictos y negociaciones en curso, requiriendo seguimiento continuo de la evoluci√≥n de estos eventos.</p>
        
        <p>Este an√°lisis se basa en fuentes m√∫ltiples y busca proporcionar una perspectiva integral de los eventos m√°s relevantes para la estabilidad y seguridad internacional.</p>
        """,
        'sources_count': len(articles),
        'generated_at': datetime.now().isoformat(),
        'ai_model': 'Fallback Analysis',
        'analysis_type': 'basic_geopolitical'
    }

@app.route('/api/generate-ai-analysis', methods=['POST'])
def generate_groq_ai_analysis():
    """
    Endpoint para generar an√°lisis geopol√≠tico con Groq IA
    """
    try:
        data = request.get_json() or {}
        
        # Obtener art√≠culos desde la base de datos o usar los proporcionados
        articles = data.get('articles')
        if not articles:
            articles = get_top_articles_from_db(limit=20)
        
        if not articles:
            return jsonify({
                'error': 'No se encontraron art√≠culos para analizar',
                'success': False
            }), 400
        
        # Generar an√°lisis con Groq
        analysis_result = generate_groq_geopolitical_analysis(articles)
        
        # Estructurar respuesta
        response = {
            'success': True,
            'analysis': analysis_result,
            'metadata': {
                'articles_analyzed': len(articles),
                'generation_time': datetime.now().isoformat(),
                'endpoint_version': '1.0'
            }
        }
        
        logger.info(f"‚úÖ An√°lisis geopol√≠tico generado: {len(articles)} art√≠culos procesados")
        return jsonify(response)
        
    except Exception as e:
        logger.error(f"‚ùå Error en endpoint de an√°lisis: {e}")
        return jsonify({
            'error': f'Error generando an√°lisis: {str(e)}',
            'success': False
        }), 500

if __name__ == '__main__':
    print("üöÄ Iniciando Dashboard con BERT + GROQ AI - VERSI√ìN UNIFICADA")
    print("üß† Cargando modelo BERT para an√°lisis pol√≠tico...")
    
    # CR√çTICO: Cargar modelo BERT antes de iniciar servidor
    if not initialize_bert_model():
        print("‚ùå FALLO CR√çTICO: No se pudo cargar modelo BERT")
        print("üõë El servidor NO se iniciar√° sin el modelo de IA")
        exit(1)
    
    print("‚úÖ Modelo BERT cargado exitosamente")
    print("ü§ñ Groq AI disponible para an√°lisis geopol√≠tico")
    print("üåê URL Principal: http://localhost:5003")
    print("üß† BERT Endpoint: http://localhost:5003/api/analyze-importance")
    print("üåç Groq Analysis: http://localhost:5003/api/generate-ai-analysis")
    print("üß™ Test BERT: http://localhost:5003/api/test-bert")
    print("-" * 60)
    
    try:
        app.run(host='127.0.0.1', port=5003, debug=False)  # Puerto 5003 unificado
    except KeyboardInterrupt:
        print("\nüëã Dashboard detenido por el usuario")
